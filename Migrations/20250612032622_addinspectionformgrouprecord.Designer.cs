// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BOM.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250612032622_addinspectionformgrouprecord")]
    partial class addinspectionformgrouprecord
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelLayer.Bom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BomCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BuildTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildingTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<string>("ScopeWorkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitNameId")
                        .HasColumnType("int");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UnitTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isReleased")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BomTypeId");

                    b.ToTable("ef_boms");
                });

            modelBuilder.Entity("ModelLayer.BomActiveStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_active_status");
                });

            modelBuilder.Entity("ModelLayer.BomActiveTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BomCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BuildTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildingTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("IsReleased")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<string>("ScopeWorkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitNameId")
                        .HasColumnType("int");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UnitTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_active_tracking");
                });

            modelBuilder.Entity("ModelLayer.BomBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<decimal>("BomQty")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("BomReleasedId")
                        .HasColumnType("int");

                    b.Property<string>("BomRevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("QtyConsume")
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.ToTable("ef_Bom_Balance");
                });

            modelBuilder.Entity("ModelLayer.BomBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BlockCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ClassicficationId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainBlockId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Rev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<int>("SubBlockId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("isReleased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isReleasedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhaseId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ef_bom_block");
                });

            modelBuilder.Entity("ModelLayer.BomBlockActiveTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BlockCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomBlockId")
                        .HasColumnType("int");

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ClassicficationId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainBlockId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Rev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<int>("SubBlockId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("isReleased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isReleasedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bomblock_active_tracking");
                });

            modelBuilder.Entity("ModelLayer.BomBlockDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomBlockId")
                        .HasColumnType("int");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<int>("BomReleasedId")
                        .HasColumnType("int");

                    b.Property<string>("BomRevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UnitNumberId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BomBlockId");

                    b.HasIndex("BomId");

                    b.ToTable("ef_bom_block_details");
                });

            modelBuilder.Entity("ModelLayer.BomBlockDetailActiveTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomBlockDetailId")
                        .HasColumnType("int");

                    b.Property<int>("BomBlockId")
                        .HasColumnType("int");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<int>("BomReleasedId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefBomBlockActiveId")
                        .HasColumnType("int");

                    b.Property<int?>("RefBomBlockId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UnitNumberId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefBomBlockId");

                    b.ToTable("ef_bomblock_details_active_tracking");
                });

            modelBuilder.Entity("ModelLayer.BomBlockDetailUpdateTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomBlockDetailId")
                        .HasColumnType("int");

                    b.Property<int>("BomBlockId")
                        .HasColumnType("int");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<int>("BomReleasedId")
                        .HasColumnType("int");

                    b.Property<string>("BomRevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefBomBlockId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UnitNumberId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefBomBlockId");

                    b.ToTable("ef_bom_block_detail_update_tracking");
                });

            modelBuilder.Entity("ModelLayer.BomBlockStatusTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_block_status_tracking");
                });

            modelBuilder.Entity("ModelLayer.BomBlockUpdateTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BlockCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomBlockId")
                        .HasColumnType("int");

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ClassicficationId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainBlockId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Rev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<int>("SubBlockId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("isReleased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isReleasedId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_block_update_tracking");
                });

            modelBuilder.Entity("ModelLayer.BomDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<string>("BomUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("QuantityREV")
                        .HasColumnType("decimal(18,10)")
                        .HasColumnName("Quantity_REV");

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("Wastage")
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.HasIndex("BomId");

                    b.ToTable("ef_bom_details");
                });

            modelBuilder.Entity("ModelLayer.BomDetailActiveTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomActiveId")
                        .HasColumnType("int");

                    b.Property<int>("BomDetailId")
                        .HasColumnType("int")
                        .HasColumnName("Bom_Detail_Id");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<string>("BomUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("QuantityREV")
                        .HasColumnType("decimal(18,10)")
                        .HasColumnName("Quantity_REV");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<decimal>("Wastage")
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.HasIndex("BomActiveId");

                    b.ToTable("ef_bom_detail_active_tracking");
                });

            modelBuilder.Entity("ModelLayer.BomDetailUpdateTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomDetailId")
                        .HasColumnType("int")
                        .HasColumnName("Bom_Detail_Id");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<int>("BomRevId")
                        .HasColumnType("int");

                    b.Property<string>("BomUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("QuantityREV")
                        .HasColumnType("decimal(18,10)")
                        .HasColumnName("Quantity_REV");

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("Wastage")
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.HasIndex("BomRevId");

                    b.ToTable("ef_bom_detail_update_tracking");
                });

            modelBuilder.Entity("ModelLayer.BomMainBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescriptionKH")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MainBlockCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhaseID");

                    b.ToTable("ef_bom_main_block");
                });

            modelBuilder.Entity("ModelLayer.BomStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_status");
                });

            modelBuilder.Entity("ModelLayer.BomStatusTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BomCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BomId");

                    b.ToTable("ef_bom_status_trackings");
                });

            modelBuilder.Entity("ModelLayer.BomSubBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassificationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescriptionKH")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SubBlockCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationID");

                    b.ToTable("ef_bom_sub_block");
                });

            modelBuilder.Entity("ModelLayer.BomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescriptionKH")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_type");
                });

            modelBuilder.Entity("ModelLayer.BomUpdatedTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BomCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BuildTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildingTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<string>("ScopeWorkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitNameId")
                        .HasColumnType("int");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UnitTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("isReleased")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_updated_tracking");
                });

            modelBuilder.Entity("ModelLayer.Boq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BoqCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildingTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<string>("PhaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<string>("ScopeWorkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitNameId")
                        .HasColumnType("int");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UnitTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhaseId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ef_boqs");
                });

            modelBuilder.Entity("ModelLayer.BoqItemsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoqId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<string>("FloorName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("QuantityREV")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("UoM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("WorkTaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoqId");

                    b.HasIndex("ItemId");

                    b.ToTable("ef_boq_items");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BoqRevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BoqUnitId")
                        .HasColumnType("int");

                    b.Property<int>("BoqUnitItemId")
                        .HasColumnType("int");

                    b.Property<int>("ClassificationID")
                        .HasColumnType("int");

                    b.Property<string>("ClassificationName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("EmployeeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainBlockID")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseID")
                        .HasColumnType("int");

                    b.Property<string>("PhaseName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ScopeWorkID")
                        .HasColumnType("int");

                    b.Property<string>("ScopeWorkName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SubBlockID")
                        .HasColumnType("int");

                    b.Property<string>("SubBlockName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UnitNameID")
                        .HasColumnType("int");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UnitNumberID")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_boq_site_inspection");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoqId")
                        .HasColumnType("int");

                    b.Property<int>("BoqItemsDetailID")
                        .HasColumnType("int");

                    b.Property<int>("BoqSiteInspectionID")
                        .HasColumnType("int");

                    b.Property<string>("BuildingFloor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BuildingFloorID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("QuantityREV")
                        .HasColumnType("float");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SiteInspectPercentage")
                        .HasColumnType("int");

                    b.Property<int>("SiteInspectPercentageID")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<string>("UoM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<string>("WorkTaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoqSiteInspectionID");

                    b.ToTable("ef_boq_site_inspection_floor");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloorAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoqSiteInspectionFloorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoqSiteInspectionFloorId");

                    b.ToTable("ef_boq_site_inspection_floor_attachment");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloorAttachmentVoHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoqInspectionFloorAttId")
                        .HasColumnType("int");

                    b.Property<int?>("BoqInspectionFloorVoId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoqInspectionFloorVoId");

                    b.ToTable("ef_boq_site_inspection_floor_attachment_vo_history");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloorVoHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoqId")
                        .HasColumnType("int");

                    b.Property<int>("BoqInspectionFloorId")
                        .HasColumnType("int");

                    b.Property<int?>("BoqInspectionId")
                        .HasColumnType("int");

                    b.Property<int>("BoqItemsDetailID")
                        .HasColumnType("int");

                    b.Property<int>("BoqSiteInspectionID")
                        .HasColumnType("int");

                    b.Property<string>("BuildingFloor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BuildingFloorID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double>("QuantityREV")
                        .HasColumnType("float");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SiteInspectPercentage")
                        .HasColumnType("int");

                    b.Property<int>("SiteInspectPercentageID")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<string>("UoM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<string>("WorkTaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoqInspectionId");

                    b.ToTable("ef_boq_site_inspection_floor_vo_history");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionVoHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BoqInspectionId")
                        .HasColumnType("int");

                    b.Property<string>("BoqRevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BoqUnitId")
                        .HasColumnType("int");

                    b.Property<int>("BoqUnitItemId")
                        .HasColumnType("int");

                    b.Property<int>("ClassificationID")
                        .HasColumnType("int");

                    b.Property<string>("ClassificationName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocumentStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("EmployeeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainBlockID")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseID")
                        .HasColumnType("int");

                    b.Property<string>("PhaseName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ScopeWorkID")
                        .HasColumnType("int");

                    b.Property<string>("ScopeWorkName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SubBlockID")
                        .HasColumnType("int");

                    b.Property<string>("SubBlockName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UnitNameID")
                        .HasColumnType("int");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UnitNumberID")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_boq_site_inspection_vo_history");
                });

            modelBuilder.Entity("ModelLayer.BoqUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassicficationId")
                        .HasColumnType("int");

                    b.Property<string>("ClassicficationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("IsReleased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainBlockId")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<string>("PhaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Rev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubBlockId")
                        .HasColumnType("int");

                    b.Property<string>("SubBlockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitNameId")
                        .HasColumnType("int");

                    b.Property<int>("UnitNumberId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNumberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhaseId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ef_boq_Units");
                });

            modelBuilder.Entity("ModelLayer.BoqUnitItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BoqId")
                        .HasColumnType("int");

                    b.Property<string>("BoqName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BoqUnitId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<string>("ScopeWorkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoqId");

                    b.HasIndex("BoqUnitId");

                    b.ToTable("ef_boq_unit_items");
                });

            modelBuilder.Entity("ModelLayer.BoqUnitItemDetailVoHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BoqId")
                        .HasColumnType("int");

                    b.Property<string>("BoqName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BoqUnitId")
                        .HasColumnType("int");

                    b.Property<int>("BoqUnitVoId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<string>("ScopeWorkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("VoBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("boqUnitItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoqUnitVoId");

                    b.ToTable("ef_boq_unit_item_vo_history");
                });

            modelBuilder.Entity("ModelLayer.BoqUnitVohistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassicficationId")
                        .HasColumnType("int");

                    b.Property<string>("ClassicficationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("IsReleased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainBlockId")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<string>("PhaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Rev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubBlockId")
                        .HasColumnType("int");

                    b.Property<string>("SubBlockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitNameId")
                        .HasColumnType("int");

                    b.Property<int>("UnitNumberId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNumberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("VoBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("boqUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_boq_unit_vo_history");
                });

            modelBuilder.Entity("ModelLayer.BuildingFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_boq_building_floor");
                });

            modelBuilder.Entity("ModelLayer.BuildingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KhmerDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhaseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<string>("PhaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_building_type");
                });

            modelBuilder.Entity("ModelLayer.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassificationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescriptionKH")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_classification");
                });

            modelBuilder.Entity("ModelLayer.GBApprovalCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApprovalConditionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("approvalTypeCodeReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("approvalTypeDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("approvalTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("conditionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_globle_workflow_condition", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.GBDocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ef_globle_workflow_document_type", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.GBWorkflowApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApprovalTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ef_globle_workflow_approval", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.InspectionForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_boq_inspectionform");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormGroupRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("FormGroupId")
                        .HasColumnType("int");

                    b.Property<int>("InspectRecordId")
                        .HasColumnType("int");

                    b.Property<decimal>("InspectionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormGroupId");

                    b.HasIndex("InspectRecordId");

                    b.ToTable("ef_boq_site_inspection_form_group_record");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormItemCheckList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("FormItemGroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormItemGroupId");

                    b.ToTable("ef_boq_inspectionformitemchecklist");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<decimal>("InspectionPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("ef_boq_inspectionformitemgroup");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("InspectionRateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InspectionRateId");

                    b.ToTable("ef_boq_site_inspection_form_record");
                });

            modelBuilder.Entity("ModelLayer.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ReferenceSubItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferenceSubItemTypeId")
                        .HasColumnType("int");

                    b.Property<long>("brandCode")
                        .HasColumnType("bigint");

                    b.Property<int>("createdById")
                        .HasColumnType("int");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("descriptionKh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descriptionTh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("hectoliter")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<string>("itemCode")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<long>("itemGroup")
                        .HasColumnType("bigint");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<long>("itemType")
                        .HasColumnType("bigint");

                    b.Property<int?>("modifiedById")
                        .HasColumnType("int");

                    b.Property<string>("modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("datetime2");

                    b.Property<double>("rate")
                        .HasColumnType("float");

                    b.Property<string>("shortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortTextKh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("thumnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unitOfMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("unitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<decimal>("unitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("id");

                    b.ToTable("ef_items", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.ItemType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<int>("typeCode")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ef_item_type", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.LoggedRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("QueryString")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ef_logged_request", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.NumberRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("createdby");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("createddate");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<long>("FromNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("from_number");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<int>("Key")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("modifiedby");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modifieddate");

                    b.Property<long>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<long>("ToNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("to_number");

                    b.HasKey("Id");

                    b.ToTable("ef_numberranges", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.PRBomRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomBlockId")
                        .HasColumnType("int");

                    b.Property<int>("BomBlockRevCode")
                        .HasColumnType("int");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<string>("BomRevCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefPrId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefPrId");

                    b.ToTable("ef_PR_Requests_Bom");
                });

            modelBuilder.Entity("ModelLayer.PRRequestUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BuildingTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RedsUnitCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RefPrId")
                        .HasColumnType("int");

                    b.Property<string>("SapUnitCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UnitNumberId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNumberName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UnitTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("RefPrId");

                    b.ToTable("ef_PR_Requests_Units");
                });

            modelBuilder.Entity("ModelLayer.Phase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConstructionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhaseCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhaseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhaseNameKhmer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhaseNameLoc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ef_project_phases");
                });

            modelBuilder.Entity("ModelLayer.PrBomItemsRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BomBalance")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("BomBlockId")
                        .HasColumnType("int");

                    b.Property<string>("BomBlockRevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BomId")
                        .HasColumnType("int");

                    b.Property<decimal>("BomQty")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("BomReleasedId")
                        .HasColumnType("int");

                    b.Property<string>("BomRevCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ItemQty")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefPrReqId")
                        .HasColumnType("int");

                    b.Property<decimal>("RequestQty")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("UnitNumberId")
                        .HasColumnType("int");

                    b.Property<string>("UnitNumberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Wastage")
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.HasIndex("RefPrReqId");

                    b.ToTable("ef_PR_bom_Items_Requests");
                });

            modelBuilder.Entity("ModelLayer.PrItemsRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseUnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<string>("BaseUnitOfMeasureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BaseUnitPrice")
                        .HasColumnType("decimal(18,10)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PRBomRequestId")
                        .HasColumnType("int");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("RefPrId")
                        .HasColumnType("int");

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,10)");

                    b.Property<decimal>("Wastage")
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.HasIndex("PRBomRequestId");

                    b.HasIndex("RefPrId");

                    b.ToTable("ef_PR_Requests_Items");
                });

            modelBuilder.Entity("ModelLayer.PrItemsRequestAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefItemRqId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefItemRqId");

                    b.ToTable("ef_PRItemsRequestAttachments");
                });

            modelBuilder.Entity("ModelLayer.PrItemsSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItmReqId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("RefPrId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasureName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ItmReqId");

                    b.ToTable("ef_PR_Requests_Items_Schedules");
                });

            modelBuilder.Entity("ModelLayer.PrRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BomTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<string>("ClassificationName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Code")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("MainBlockId")
                        .HasColumnType("int");

                    b.Property<string>("MainBlockName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<string>("PhaseName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ScopeOfWorkId")
                        .HasColumnType("int");

                    b.Property<string>("ScopeOfWorkName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusApproval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusApprovalId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("SubBlockId")
                        .HasColumnType("int");

                    b.Property<string>("SubBlockName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("TotalPrAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ef_PR_Requests");
                });

            modelBuilder.Entity("ModelLayer.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressKhmer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectNameKhmer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_projects");
                });

            modelBuilder.Entity("ModelLayer.RequestLeaveApprovalDoc", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("DocumentTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestDocumentStatus")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("approvalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("approvalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("approvalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("approvalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("approvalTypeDocCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("docNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<int>("levelNum")
                        .HasColumnType("int");

                    b.Property<double>("numOfDays")
                        .HasColumnType("float");

                    b.Property<string>("requesterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("workflowCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ef_request_leave_doc", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.SapEmployeeMasterData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("actionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("businessAreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("businessAreaDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyCodeDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("costCenterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("costCenterDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("createById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("emergency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeFPId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeGroupDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeNatureCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeNatureDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeSubGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeSubGroupDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeTypeDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("gbfa")
                        .HasColumnType("bit");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("hireDateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("insurence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("martialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("modifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ogUnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ogUnitDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payScaleGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payScaleLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personalAreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personalAreaDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personalSubAreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personalSubAreaDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("positionDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("positionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("probationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("reasonOfWithdrawn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("reminderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("residentialAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supAreaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("supTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sysId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("withdrawnDateStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("workScheduleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("workScheduleDes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ef_sap_employee_masterdata", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.ScopeOfWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescriptionKH")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BomTypeID");

                    b.ToTable("ef_bom_scope_of_work");
                });

            modelBuilder.Entity("ModelLayer.SiteProgressInspectionRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoqId")
                        .HasColumnType("int");

                    b.Property<int>("BoqItemId")
                        .HasColumnType("int");

                    b.Property<string>("BoqName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Selected")
                        .HasColumnType("bit");

                    b.Property<decimal>("SiteProgressPercent")
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("Id");

                    b.HasIndex("BoqItemId");

                    b.ToTable("ef_boq_site_progress_inspection_rate");
                });

            modelBuilder.Entity("ModelLayer.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_status", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.SubItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemTypeid")
                        .HasColumnType("int");

                    b.Property<string>("Subtypecode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Typecode")
                        .HasColumnType("int");

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeid");

                    b.ToTable("ef_item_sub_type", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.TypeOfBom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_bom_typeofbom");
                });

            modelBuilder.Entity("ModelLayer.UnitName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescriptionKH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("UnitTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitTypeID");

                    b.ToTable("ef_unit_name");
                });

            modelBuilder.Entity("ModelLayer.UnitNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlockId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("RedsUnitCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SapUnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubBlockId")
                        .HasColumnType("int");

                    b.Property<int>("UnitNameId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlockId");

                    b.HasIndex("SubBlockId");

                    b.HasIndex("UnitNameId");

                    b.ToTable("ef_unit_numbers");
                });

            modelBuilder.Entity("ModelLayer.UnitOfMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_items_UnitOfMeasure", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuildingTypeID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescriptionKH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayUnitTypeCode")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TypeGrouped")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitTypeCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("UnitTypeLoc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingTypeID");

                    b.ToTable("ef_unit_type");
                });

            modelBuilder.Entity("ModelLayer.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(8);

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(9);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<string>("countryCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("countryName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("createdby")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<DateTime>("createddate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<int?>("distributorId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(6);

                    b.Property<string>("employeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.Property<bool>("isactive")
                        .HasColumnType("bit")
                        .HasColumnOrder(14);

                    b.Property<string>("lastname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("modifiedby")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(12);

                    b.Property<DateTime?>("modifieddate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(13);

                    b.Property<long?>("oogs")
                        .HasColumnType("bigint");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("profile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("regionId")
                        .HasColumnType("int");

                    b.Property<int?>("report_to")
                        .HasColumnType("int");

                    b.Property<int?>("role")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<string>("sapPassword")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("sapUser")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<int?>("userTypeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userTypeId");

                    b.ToTable("ef_user", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.UserTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("isactive")
                        .HasColumnType("bit");

                    b.Property<string>("userType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ef_sys_usertype", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.WorkItemTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DescriptionKH")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("FormInspectID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MainBlockId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ScopeWorkId")
                        .HasColumnType("int");

                    b.Property<int>("SubBlockId")
                        .HasColumnType("int");

                    b.Property<string>("UoM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BomTypeID");

                    b.HasIndex("ScopeWorkId");

                    b.ToTable("ef_boq_work_item_task");
                });

            modelBuilder.Entity("ModelLayer.WorkItemTaskUoM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UoMId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("taskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UoMId");

                    b.ToTable("ef_boq_work_item_task_uom");
                });

            modelBuilder.Entity("Models.ItemsDimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("RefItemCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("REF_ItemCode");

                    b.Property<int>("RefItemId")
                        .HasColumnType("int")
                        .HasColumnName("REF_ItemId");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ef_items_Dimensions", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("ModelLayer.Bom", b =>
                {
                    b.HasOne("ModelLayer.BomType", "BomType")
                        .WithMany("Boms")
                        .HasForeignKey("BomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BomType");
                });

            modelBuilder.Entity("ModelLayer.BomBlock", b =>
                {
                    b.HasOne("ModelLayer.Phase", "Phase")
                        .WithMany("BomBlocks")
                        .HasForeignKey("PhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Projects", "Projects")
                        .WithMany("BomBlocks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Phase");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ModelLayer.BomBlockDetail", b =>
                {
                    b.HasOne("ModelLayer.BomBlock", "BomBlock")
                        .WithMany("BomBlockDetails")
                        .HasForeignKey("BomBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Bom", "Bom")
                        .WithMany("BomBlockDetails")
                        .HasForeignKey("BomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bom");

                    b.Navigation("BomBlock");
                });

            modelBuilder.Entity("ModelLayer.BomBlockDetailActiveTracking", b =>
                {
                    b.HasOne("ModelLayer.BomBlockActiveTracking", "BomBlockActiveTracking")
                        .WithMany("BomBlockDetailActiveTrackings")
                        .HasForeignKey("RefBomBlockId");

                    b.Navigation("BomBlockActiveTracking");
                });

            modelBuilder.Entity("ModelLayer.BomBlockDetailUpdateTracking", b =>
                {
                    b.HasOne("ModelLayer.BomBlockUpdateTracking", "BomBlockUpdateTracking")
                        .WithMany("BomBlockDetailUpdateTrackings")
                        .HasForeignKey("RefBomBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BomBlockUpdateTracking");
                });

            modelBuilder.Entity("ModelLayer.BomDetail", b =>
                {
                    b.HasOne("ModelLayer.Bom", "bom")
                        .WithMany("bomDetails")
                        .HasForeignKey("BomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("bom");
                });

            modelBuilder.Entity("ModelLayer.BomDetailActiveTracking", b =>
                {
                    b.HasOne("ModelLayer.BomActiveTracking", "BomActiveTracking")
                        .WithMany("BomDetailActiveTrackings")
                        .HasForeignKey("BomActiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BomActiveTracking");
                });

            modelBuilder.Entity("ModelLayer.BomDetailUpdateTracking", b =>
                {
                    b.HasOne("ModelLayer.BomUpdatedTracking", "BomUpdatedTracking")
                        .WithMany("BomDetailUpdateTrackings")
                        .HasForeignKey("BomRevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BomUpdatedTracking");
                });

            modelBuilder.Entity("ModelLayer.BomMainBlock", b =>
                {
                    b.HasOne("ModelLayer.Phase", "Phase")
                        .WithMany()
                        .HasForeignKey("PhaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phase");
                });

            modelBuilder.Entity("ModelLayer.BomStatusTracking", b =>
                {
                    b.HasOne("ModelLayer.Bom", "bom")
                        .WithMany("BomStatusTrackings")
                        .HasForeignKey("BomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bom");
                });

            modelBuilder.Entity("ModelLayer.BomSubBlock", b =>
                {
                    b.HasOne("ModelLayer.Classification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classification");
                });

            modelBuilder.Entity("ModelLayer.Boq", b =>
                {
                    b.HasOne("ModelLayer.Phase", "Phases")
                        .WithMany("Boqs")
                        .HasForeignKey("PhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Projects", "Projects")
                        .WithMany("Boqs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Phases");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ModelLayer.BoqItemsDetail", b =>
                {
                    b.HasOne("ModelLayer.Boq", "boq")
                        .WithMany("BoqItemsDetails")
                        .HasForeignKey("BoqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.WorkItemTask", "ItemTask")
                        .WithMany("BoqItemsDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemTask");

                    b.Navigation("boq");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloor", b =>
                {
                    b.HasOne("ModelLayer.BoqSiteInspection", "BoqSiteInspection")
                        .WithMany("BoqSiteInspectionFloors")
                        .HasForeignKey("BoqSiteInspectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoqSiteInspection");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloorAttachment", b =>
                {
                    b.HasOne("ModelLayer.BoqSiteInspectionFloor", null)
                        .WithMany("Attachments")
                        .HasForeignKey("BoqSiteInspectionFloorId");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloorAttachmentVoHistory", b =>
                {
                    b.HasOne("ModelLayer.BoqSiteInspectionFloorVoHistory", "BoqSiteInspectionFloorVoHistory")
                        .WithMany("Attachments")
                        .HasForeignKey("BoqInspectionFloorVoId");

                    b.Navigation("BoqSiteInspectionFloorVoHistory");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloorVoHistory", b =>
                {
                    b.HasOne("ModelLayer.BoqSiteInspectionVoHistory", "BoqSiteInspectionVo")
                        .WithMany("BoqSiteInspectionFloors")
                        .HasForeignKey("BoqInspectionId");

                    b.Navigation("BoqSiteInspectionVo");
                });

            modelBuilder.Entity("ModelLayer.BoqUnit", b =>
                {
                    b.HasOne("ModelLayer.Phase", "Phase")
                        .WithMany()
                        .HasForeignKey("PhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.Projects", "Projects")
                        .WithMany("BoqUnits")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Phase");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ModelLayer.BoqUnitItem", b =>
                {
                    b.HasOne("ModelLayer.Boq", "Boq")
                        .WithMany("BoqUnitItems")
                        .HasForeignKey("BoqId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ModelLayer.BoqUnit", "BoqUnit")
                        .WithMany("BoqUnitItems")
                        .HasForeignKey("BoqUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boq");

                    b.Navigation("BoqUnit");
                });

            modelBuilder.Entity("ModelLayer.BoqUnitItemDetailVoHistory", b =>
                {
                    b.HasOne("ModelLayer.BoqUnitVohistory", "BoqUnitVohistory")
                        .WithMany("ItemDetailVoHistories")
                        .HasForeignKey("BoqUnitVoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoqUnitVohistory");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormGroupRecord", b =>
                {
                    b.HasOne("ModelLayer.InspectionFormItemGroup", "InspectionFormItemGroup")
                        .WithMany("FormGroupRecords")
                        .HasForeignKey("FormGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.InspectionFormRecord", "InspectionFormRecord")
                        .WithMany("FormGroupRecords")
                        .HasForeignKey("InspectRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionFormItemGroup");

                    b.Navigation("InspectionFormRecord");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormItemCheckList", b =>
                {
                    b.HasOne("ModelLayer.InspectionFormItemGroup", "FormItemGroup")
                        .WithMany("FormItemCheckLists")
                        .HasForeignKey("FormItemGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormItemGroup");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormItemGroup", b =>
                {
                    b.HasOne("ModelLayer.InspectionForm", "InspectionForm")
                        .WithMany("FormItemGroups")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionForm");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormRecord", b =>
                {
                    b.HasOne("ModelLayer.SiteProgressInspectionRate", "SiteProgressInspectionRate")
                        .WithMany("InspectionFormRecords")
                        .HasForeignKey("InspectionRateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiteProgressInspectionRate");
                });

            modelBuilder.Entity("ModelLayer.PRBomRequest", b =>
                {
                    b.HasOne("ModelLayer.PrRequest", "PrRequest")
                        .WithMany("PrBomRequests")
                        .HasForeignKey("RefPrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrRequest");
                });

            modelBuilder.Entity("ModelLayer.PRRequestUnit", b =>
                {
                    b.HasOne("ModelLayer.PrRequest", "PrRequest")
                        .WithMany("PrRequestUnits")
                        .HasForeignKey("RefPrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrRequest");
                });

            modelBuilder.Entity("ModelLayer.Phase", b =>
                {
                    b.HasOne("ModelLayer.Projects", "Project")
                        .WithMany("Phases")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ModelLayer.PrBomItemsRequest", b =>
                {
                    b.HasOne("ModelLayer.PrRequest", "PrRequest")
                        .WithMany("BomItemsRequests")
                        .HasForeignKey("RefPrReqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrRequest");
                });

            modelBuilder.Entity("ModelLayer.PrItemsRequest", b =>
                {
                    b.HasOne("ModelLayer.PRBomRequest", null)
                        .WithMany("PrItemsRequests")
                        .HasForeignKey("PRBomRequestId");

                    b.HasOne("ModelLayer.PrRequest", "PrRequest")
                        .WithMany()
                        .HasForeignKey("RefPrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrRequest");
                });

            modelBuilder.Entity("ModelLayer.PrItemsRequestAttachment", b =>
                {
                    b.HasOne("ModelLayer.PrItemsRequest", "PrItemsRequest")
                        .WithMany("PrItemsRequestAttachments")
                        .HasForeignKey("RefItemRqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrItemsRequest");
                });

            modelBuilder.Entity("ModelLayer.PrItemsSchedule", b =>
                {
                    b.HasOne("ModelLayer.PrItemsRequest", "PrItemsRequest")
                        .WithMany("PrItemsSchedules")
                        .HasForeignKey("ItmReqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrItemsRequest");
                });

            modelBuilder.Entity("ModelLayer.ScopeOfWork", b =>
                {
                    b.HasOne("ModelLayer.BomType", "BomType")
                        .WithMany("ScopeOfWorks")
                        .HasForeignKey("BomTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BomType");
                });

            modelBuilder.Entity("ModelLayer.SiteProgressInspectionRate", b =>
                {
                    b.HasOne("ModelLayer.BoqItemsDetail", "ItemsDetail")
                        .WithMany("InspectionsRate")
                        .HasForeignKey("BoqItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemsDetail");
                });

            modelBuilder.Entity("ModelLayer.SubItemType", b =>
                {
                    b.HasOne("ModelLayer.ItemType", "ItemType")
                        .WithMany("subItemsType")
                        .HasForeignKey("ItemTypeid");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("ModelLayer.UnitName", b =>
                {
                    b.HasOne("ModelLayer.UnitType", "UnitType")
                        .WithMany()
                        .HasForeignKey("UnitTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitType");
                });

            modelBuilder.Entity("ModelLayer.UnitNumber", b =>
                {
                    b.HasOne("ModelLayer.BomMainBlock", "MainBlock")
                        .WithMany()
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.BomSubBlock", "BomSubBlock")
                        .WithMany()
                        .HasForeignKey("SubBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.UnitName", "UnitName")
                        .WithMany()
                        .HasForeignKey("UnitNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BomSubBlock");

                    b.Navigation("MainBlock");

                    b.Navigation("UnitName");
                });

            modelBuilder.Entity("ModelLayer.UnitType", b =>
                {
                    b.HasOne("ModelLayer.BuildingType", "BuildingType")
                        .WithMany()
                        .HasForeignKey("BuildingTypeID");

                    b.Navigation("BuildingType");
                });

            modelBuilder.Entity("ModelLayer.User", b =>
                {
                    b.HasOne("ModelLayer.UserTypes", "userType")
                        .WithMany()
                        .HasForeignKey("userTypeId");

                    b.Navigation("userType");
                });

            modelBuilder.Entity("ModelLayer.WorkItemTask", b =>
                {
                    b.HasOne("ModelLayer.BomType", "BomType")
                        .WithMany("ItemTasks")
                        .HasForeignKey("BomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelLayer.ScopeOfWork", "ScopeOfWork")
                        .WithMany("ItemTasks")
                        .HasForeignKey("ScopeWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BomType");

                    b.Navigation("ScopeOfWork");
                });

            modelBuilder.Entity("ModelLayer.WorkItemTaskUoM", b =>
                {
                    b.HasOne("ModelLayer.UnitOfMeasure", "unitOfMeasure")
                        .WithMany("WorkItemUoM")
                        .HasForeignKey("UoMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("unitOfMeasure");
                });

            modelBuilder.Entity("ModelLayer.Bom", b =>
                {
                    b.Navigation("BomBlockDetails");

                    b.Navigation("BomStatusTrackings");

                    b.Navigation("bomDetails");
                });

            modelBuilder.Entity("ModelLayer.BomActiveTracking", b =>
                {
                    b.Navigation("BomDetailActiveTrackings");
                });

            modelBuilder.Entity("ModelLayer.BomBlock", b =>
                {
                    b.Navigation("BomBlockDetails");
                });

            modelBuilder.Entity("ModelLayer.BomBlockActiveTracking", b =>
                {
                    b.Navigation("BomBlockDetailActiveTrackings");
                });

            modelBuilder.Entity("ModelLayer.BomBlockUpdateTracking", b =>
                {
                    b.Navigation("BomBlockDetailUpdateTrackings");
                });

            modelBuilder.Entity("ModelLayer.BomType", b =>
                {
                    b.Navigation("Boms");

                    b.Navigation("ItemTasks");

                    b.Navigation("ScopeOfWorks");
                });

            modelBuilder.Entity("ModelLayer.BomUpdatedTracking", b =>
                {
                    b.Navigation("BomDetailUpdateTrackings");
                });

            modelBuilder.Entity("ModelLayer.Boq", b =>
                {
                    b.Navigation("BoqItemsDetails");

                    b.Navigation("BoqUnitItems");
                });

            modelBuilder.Entity("ModelLayer.BoqItemsDetail", b =>
                {
                    b.Navigation("InspectionsRate");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspection", b =>
                {
                    b.Navigation("BoqSiteInspectionFloors");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloor", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionFloorVoHistory", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("ModelLayer.BoqSiteInspectionVoHistory", b =>
                {
                    b.Navigation("BoqSiteInspectionFloors");
                });

            modelBuilder.Entity("ModelLayer.BoqUnit", b =>
                {
                    b.Navigation("BoqUnitItems");
                });

            modelBuilder.Entity("ModelLayer.BoqUnitVohistory", b =>
                {
                    b.Navigation("ItemDetailVoHistories");
                });

            modelBuilder.Entity("ModelLayer.InspectionForm", b =>
                {
                    b.Navigation("FormItemGroups");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormItemGroup", b =>
                {
                    b.Navigation("FormGroupRecords");

                    b.Navigation("FormItemCheckLists");
                });

            modelBuilder.Entity("ModelLayer.InspectionFormRecord", b =>
                {
                    b.Navigation("FormGroupRecords");
                });

            modelBuilder.Entity("ModelLayer.ItemType", b =>
                {
                    b.Navigation("subItemsType");
                });

            modelBuilder.Entity("ModelLayer.PRBomRequest", b =>
                {
                    b.Navigation("PrItemsRequests");
                });

            modelBuilder.Entity("ModelLayer.Phase", b =>
                {
                    b.Navigation("BomBlocks");

                    b.Navigation("Boqs");
                });

            modelBuilder.Entity("ModelLayer.PrItemsRequest", b =>
                {
                    b.Navigation("PrItemsRequestAttachments");

                    b.Navigation("PrItemsSchedules");
                });

            modelBuilder.Entity("ModelLayer.PrRequest", b =>
                {
                    b.Navigation("BomItemsRequests");

                    b.Navigation("PrBomRequests");

                    b.Navigation("PrRequestUnits");
                });

            modelBuilder.Entity("ModelLayer.Projects", b =>
                {
                    b.Navigation("BomBlocks");

                    b.Navigation("BoqUnits");

                    b.Navigation("Boqs");

                    b.Navigation("Phases");
                });

            modelBuilder.Entity("ModelLayer.ScopeOfWork", b =>
                {
                    b.Navigation("ItemTasks");
                });

            modelBuilder.Entity("ModelLayer.SiteProgressInspectionRate", b =>
                {
                    b.Navigation("InspectionFormRecords");
                });

            modelBuilder.Entity("ModelLayer.UnitOfMeasure", b =>
                {
                    b.Navigation("WorkItemUoM");
                });

            modelBuilder.Entity("ModelLayer.WorkItemTask", b =>
                {
                    b.Navigation("BoqItemsDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
